#include <LiquidCrystal.h>
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);

// defines pins numbers
const int backlight = 1;
const int LEDROUGE = 7;
const int LEDVERTE = 8;
const int trigPin = 9;
const int echoPin = 10;


// defines variables
long duration;
float distance;
float distance2;
float vitesse;
float distanceec;

void setup() {
pinMode(backlight, OUTPUT); // Sets the backlight as an Output
pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
pinMode(echoPin, INPUT); // Sets the echoPin as an Input
pinMode(LEDROUGE , OUTPUT);
pinMode(LEDVERTE , OUTPUT);
lcd.begin(16, 2);
lcd.print("Radar ON!");
Serial.begin(9600); // Starts the serial communication
}

void loop() {
//LED 
digitalWrite(LEDROUGE, LOW);
digitalWrite(LEDVERTE, HIGH);
// Clears the trigPin
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);
// Calculating the distance
distance= duration*0.034/2;
Serial.print("Distance: ");
Serial.println(distance);
//if movement
if (distance < 400 ){
  // Prints the distance on the Serial Monitor
  delay(500);
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  // Sets the trigPin on HIGH state for 10 micro seconds
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
// Calculating the distance
  distance2 = duration*0.034/2;
  Serial.print("Distance2: ");
  Serial.println(distance2);
  if (distance2 < 400) {
      // set abs distance
      distanceec = abs(distance - distance2) ; // cm
      if (distanceec > 1){
      digitalWrite(LEDROUGE, HIGH);
      digitalWrite(LEDVERTE, LOW);
      // check distance
      lcd.setCursor(0,0);
      lcd.print("Distance 1: ");
      lcd.print(distance);
      lcd.print("cm");
      lcd.setCursor(0,1);
      lcd.print("Distance 2: ");
      lcd.print(distance2);
      lcd.print("cm");
      // Set speed
      vitesse = distanceec/50 ; // calcul vitesse v=d/t (cm/ms) to m/s delay
      vitesse = vitesse * 3.6; // calcul convertion km/h
      delay(2000);
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Traveled: ");
      lcd.print(distanceec);
      lcd.print("cm");
      lcd.setCursor(0,1);
      lcd.print("Speed: ");
      lcd.print(vitesse);
      lcd.print("KM/H");
      delay(3000);
      }
  lcd.clear();
  }
}
}
